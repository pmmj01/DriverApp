# Generated by Django 4.1.3 on 2022-12-08 17:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressCompanyFromModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('address_country', models.CharField(choices=[('AL', 'Albania'), ('AD', 'Andorra'), ('AT', 'Austria'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BA', 'Bosnia and Herzegovina'), ('BG', 'Bulgaria'), ('HR', 'Croatia'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('EE', 'Estonia'), ('FI', 'Finland'), ('FR', 'France'), ('DE', 'Germany'), ('UK', 'United Kingdom'), ('GR', 'Greece'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IRL', 'Ireland'), ('IT', 'Italy'), ('LV', 'Latvia'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MK', 'Macedonia'), ('MT', 'Malta'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('ME', 'Montenegro'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('RU', 'Russia'), ('SM', 'San Marino'), ('RS', 'Serbia'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('ES', 'Spain'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('TR', 'Turkey'), ('UA', 'Ukraine'), ('VA', 'Vatican')], max_length=15)),
                ('address_city', models.CharField(max_length=64)),
                ('address_zip_code', models.CharField(max_length=5)),
                ('address_street', models.CharField(max_length=128)),
                ('address_property_first', models.CharField(max_length=8)),
                ('address_property_second', models.CharField(blank=True, max_length=8)),
                ('address_more_info', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddressCompanyToModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('address_country', models.CharField(choices=[('AL', 'Albania'), ('AD', 'Andorra'), ('AT', 'Austria'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BA', 'Bosnia and Herzegovina'), ('BG', 'Bulgaria'), ('HR', 'Croatia'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('EE', 'Estonia'), ('FI', 'Finland'), ('FR', 'France'), ('DE', 'Germany'), ('UK', 'United Kingdom'), ('GR', 'Greece'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IRL', 'Ireland'), ('IT', 'Italy'), ('LV', 'Latvia'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MK', 'Macedonia'), ('MT', 'Malta'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('ME', 'Montenegro'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('RU', 'Russia'), ('SM', 'San Marino'), ('RS', 'Serbia'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('ES', 'Spain'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('TR', 'Turkey'), ('UA', 'Ukraine'), ('VA', 'Vatican')], max_length=20)),
                ('address_city', models.CharField(max_length=64)),
                ('address_zip_code', models.CharField(max_length=5)),
                ('address_street', models.CharField(max_length=128)),
                ('address_property_first', models.CharField(max_length=8)),
                ('address_property_second', models.CharField(blank=True, max_length=8)),
                ('address_more_info', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CargoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loading_date', models.DateField()),
                ('loading_hour', models.DateTimeField()),
                ('unloading_date', models.DateField()),
                ('unloading_hour', models.DateTimeField()),
                ('description', models.TextField()),
                ('notification', models.DateField()),
                ('reference_number', models.CharField(max_length=20)),
                ('fix', models.CharField(choices=[('fix', 'FIX'), ('free', '')], max_length=3)),
                ('customs', models.CharField(choices=[('customs', 'CUSTOMS'), ('free', '')], max_length=7)),
                ('weighs', models.PositiveSmallIntegerField(default=0)),
                ('pallets', models.PositiveSmallIntegerField(default=0)),
                ('place_of_pallets', models.PositiveSmallIntegerField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('company_address_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_company_address_from', to='Driver.addresscompanyfrommodel')),
                ('company_address_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_company_address_to', to='Driver.addresscompanytomodel')),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(choices=[('bus', 'Bus'), ('bus trailer', 'Bus Trailer'), ('small truck', 'Small Truck'), ('solo', 'Solo'), ('truck tandem', 'Truck Tandem'), ('truck trailer', 'Truck Trailer')], max_length=20)),
                ('have_to', models.CharField(choices=[('b', 'B'), ('B+E', 'B+E'), ('C', 'C'), ('C+E', 'C+E')], max_length=4)),
                ('car_number', models.CharField(max_length=9, unique=True)),
                ('weighs', models.PositiveSmallIntegerField(default=0)),
                ('tons_can_load', models.PositiveSmallIntegerField(default=0)),
                ('cargo_space', models.CharField(choices=[('truck', 'Truck'), ('8', '8 euro pallets'), ('9', '9 euro pallets'), ('10', '10 euro pallets'), ('12', '12 euro pallets'), ('18', '18 euro pallets'), ('19', '19 euro pallets')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='DriverModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_license', models.CharField(choices=[('b', 'B'), ('B+E', 'B+E'), ('C', 'C'), ('C+E', 'C+E')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='ForwarderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(choices=[('tilt trailer', 'Tilt Trailer'), ('Refrigerator Trailer', 'Refrigerator Trailer'), ('container trailer', 'Container Trailer'), ('trailer floor', 'Trailer Floor'), ('trailer moving floor', 'Trailer Moving floor'), ('special trailer', 'Special Trailer'), ('isothermal trailer', 'Isothermal Trailer'), ('tank trailer', 'Tank Trailer')], max_length=30)),
                ('trailer_number', models.CharField(max_length=9, unique=True)),
                ('weighs', models.PositiveSmallIntegerField(default=0)),
                ('tons_can_load', models.PositiveSmallIntegerField(default=0)),
                ('cargo_space', models.CharField(choices=[('8', '8 euro pallets'), ('9', '9 euro pallets'), ('10', '10 euro pallets'), ('12', '12 euro pallets'), ('18', '18 euro pallets'), ('19', '19 euro pallets'), ('20', '20 euro pallets'), ('32', '32 euro pallets'), ('33', '33 euro pallets'), ('36', '36 euro pallets')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+00000000000". Up to 14 digits allowed.', regex='^(\\+)(\\d{2,3})(\\d{9,11})$')])),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('personnel', 'Personnel'), ('dispatcher', 'Dispatcher'), ('forwarder', 'Forwarder'), ('driver', 'Driver')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanCargoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_cargo_description', to='Driver.cargomodel')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_cargo_driver', to='Driver.drivermodel')),
                ('forwarder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_cargo_forwarder', to='Driver.forwardermodel')),
                ('truck', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plan_cargo_truck', to='Driver.carmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MessageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('message_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_message_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='forwardermodel',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DriverWorkerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('confirm_arrival', models.CharField(choices=[('positive', 'Positive')], max_length=32)),
                ('confirm_unloading', models.CharField(choices=[('positive', 'Positive')], max_length=32)),
                ('confirm_loading', models.CharField(choices=[('positive', 'Positive')], max_length=32)),
                ('raport', models.CharField(choices=[('positive', 'Positive'), ('Raport problem', 'Raport problem')], max_length=32)),
                ('message', models.TextField()),
                ('message_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_worker_message_to', to=settings.AUTH_USER_MODEL)),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_worker_point', to='Driver.plancargomodel')),
            ],
        ),
        migrations.AddField(
            model_name='drivermodel',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='carmodel',
            name='car_trailer_name',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='car_trailer', to='Driver.trailermodel'),
        ),
        migrations.AddField(
            model_name='cargomodel',
            name='forwarder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_forwarder', to='Driver.forwardermodel'),
        ),
        migrations.AddField(
            model_name='cargomodel',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_truck', to='Driver.carmodel'),
        ),
    ]
